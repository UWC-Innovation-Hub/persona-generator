name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    # Check if package.json exists
    - name: Check for package.json
      id: check-package
      run: |
        if [ -f "package.json" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
    
    # Initialize a new package.json if it doesn't exist
    - name: Initialize package.json
      if: steps.check-package.outputs.exists == 'false'
      run: |
        npm init -y
        # Add required fields for GitHub Pages
        npm pkg set homepage="https://\${{ github.repository_owner }}.github.io/persona-generator/"
        npm pkg set scripts.predeploy="npm run build"
        npm pkg set scripts.deploy="gh-pages -d build"
        npm pkg set scripts.start="react-scripts start"
        npm pkg set scripts.build="react-scripts build"
        npm pkg set scripts.test="react-scripts test"
        npm pkg set scripts.eject="react-scripts eject"
    
    # Create basic project structure if needed
    - name: Setup project structure
      run: |
        # Create directories if they don't exist
        mkdir -p public src src/components
        
        # Create basic files if they don't exist
        if [ ! -f "public/index.html" ]; then
          echo '<!DOCTYPE html><html lang="en"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><title>XR Persona Generator</title></head><body><div id="root"></div></body></html>' > public/index.html
        fi
        
        if [ ! -f "src/index.js" ]; then
          echo 'import React from "react"; import ReactDOM from "react-dom/client"; import "./index.css"; import App from "./App"; const root = ReactDOM.createRoot(document.getElementById("root")); root.render(<React.StrictMode><App /></React.StrictMode>);' > src/index.js
        fi
        
        if [ ! -f "src/App.js" ]; then
          echo 'import React from "react"; import "./App.css"; import PersonaGenerator from "./components/PersonaGenerator"; function App() { return (<div className="App"><PersonaGenerator /></div>); } export default App;' > src/App.js
        fi
        
        if [ ! -f "src/index.css" ]; then
          echo '@tailwind base; @tailwind components; @tailwind utilities;' > src/index.css
        fi
        
        if [ ! -f "src/App.css" ]; then
          echo '.App { min-height: 100vh; padding: 2rem 0; }' > src/App.css
        fi
        
        # Move PersonaGenerator.js to components if it exists in the root
        if [ -f "PersonaGenerator.js" ] && [ ! -f "src/components/PersonaGenerator.js" ]; then
          cp PersonaGenerator.js src/components/
        fi
        
        # Create tailwind.config.js if it doesn't exist
        if [ ! -f "tailwind.config.js" ]; then
          echo 'module.exports = { content: ["./src/**/*.{js,jsx,ts,tsx}"], theme: { extend: {} }, plugins: [] }' > tailwind.config.js
        fi
    
    # Install dependencies
    - name: Install dependencies
      run: |
        npm install react react-dom react-scripts web-vitals
        npm install --save-dev gh-pages tailwindcss postcss autoprefixer
    
    # Build the application
    - name: Build
      run: npm run build
    
    # Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build
        branch: gh-pages